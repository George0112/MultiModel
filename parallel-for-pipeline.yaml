apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 0.5.1, pipelines.kubeflow.org/pipeline_compilation_time: '2020-06-30T09:55:23.671113',
    pipelines.kubeflow.org/pipeline_spec: '{"inputs": [{"name": "param", "type": "Integer"}],
      "name": "pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 0.5.1}
  namespace: default
spec:
  entrypoint: pipeline
  templates:
  - name: list-func
    container:
      args: [--param, '{{inputs.parameters.param}}', '----output-paths', /tmp/outputs/Output/data]
      command:
      - python3
      - -u
      - -c
      - |
        def list_func(param )  :
          return list(range(param))

        def _serialize_json(obj) -> str:
            if isinstance(obj, str):
                return obj
            import json
            def default_serializer(obj):
                if hasattr(obj, 'to_struct'):
                    return obj.to_struct()
                else:
                    raise TypeError("Object of type '%s' is not JSON serializable and does not have .to_struct() method." % obj.__class__.__name__)
            return json.dumps(obj, default=default_serializer)

        import argparse
        _parser = argparse.ArgumentParser(prog='List func', description='')
        _parser.add_argument("--param", dest="param", type=int, required=True, default=argparse.SUPPRESS)
        _parser.add_argument("----output-paths", dest="_output_paths", type=str, nargs=1)
        _parsed_args = vars(_parser.parse_args())
        _output_files = _parsed_args.pop("_output_paths", [])

        _outputs = list_func(**_parsed_args)

        _outputs = [_outputs]

        _output_serializers = [
            _serialize_json,

        ]

        import os
        for idx, output_file in enumerate(_output_files):
            try:
                os.makedirs(os.path.dirname(output_file))
            except OSError:
                pass
            with open(output_file, 'w') as f:
                f.write(_output_serializers[idx](_outputs[idx]))
      image: tensorflow/tensorflow:1.13.2-py3
    inputs:
      parameters:
      - {name: param}
    outputs:
      artifacts:
      - {name: list-func-output, path: /tmp/outputs/Output/data}
    metadata:
      labels: {pipelines.kubeflow.org/pipeline-sdk-type: kfp}
      annotations: {pipelines.kubeflow.org/component_spec: '{"inputs": [{"name": "param",
          "type": "Integer"}], "name": "List func", "outputs": [{"name": "Output",
          "type": "JsonArray"}]}'}
  - name: pipeline
    inputs:
      parameters:
      - {name: param}
    dag:
      tasks:
      - name: list-func
        template: list-func
        arguments:
          parameters:
          - {name: param, value: '{{inputs.parameters.param}}'}
  arguments:
    parameters:
    - {name: param}
